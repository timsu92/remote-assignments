name: Deploy Nuxt site of hw1 to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        id: detect-package-manager
        working-directory: Week-1/Assignment-1
        run: |
          if [ -f "./yarn.lock" ]; then
            echo "detected yarn"
            echo "manager=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "./pnpm-lock.yaml" ]; then
            echo "detected pnpm"
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "./package.json" ]; then
            echo "detected npm"
            echo "manager=npm" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          node-version-file: Week-1/Assignment-1/.nvmrc
          cache-dependency-path: Week-1/Assignment-1/package-lock.json
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          # Automatically inject router.base in your Nuxt configuration file and set
          # target to static (https://nuxtjs.org/docs/configuration-glossary/configuration-target/).
          static_site_generator: "nuxt"
      - name: Install dependencies
        working-directory: Week-1/Assignment-1
        run: ${{ steps.detect-package-manager.outputs.manager }} install
      - name: Static HTML export with Nuxt
        working-directory: Week-1/Assignment-1
        run: ${{ steps.detect-package-manager.outputs.manager }} run generate
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./Week-1/Assignment-1/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
